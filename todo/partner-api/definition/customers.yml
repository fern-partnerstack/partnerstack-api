# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    CustomersService:
      auth: true
      base-path: /v2/customers
      endpoints:
        "":
          path: ""
          method: GET
          docs: >-
            Returns a list of your customers. The customers are returned sorted
            by creation date by default, with the most recent customers
            appearing first.
          display-name: List all customers
          request:
            query-parameters:
              min_created:
                docs: >-
                  Applies a minimum epoch timestamp (ms) filter to the response
                  `created_at`.
                type: optional<integer>
              max_created:
                docs: >-
                  Applies a maximum epoch timestamp (ms) filter to the response
                  `created_at`.
                type: optional<integer>
              order_by:
                docs: >-
                  The field in which the results are ordered by. A `-` prefix
                  denotes that the results are in descending order.
                type: optional<string>
              limit:
                docs: >-
                  A limit on the number of items to be returned. Limits can
                  range between 1 and 250, and the default is 10.
                type: optional<integer>
              starting_after:
                docs: >-
                  A cursor for use in pagination, `starting_after` takes in an
                  item key and the subsequent call will return the following
                  items in the list. This is mutually exclusive with
                  `ending_before`.
                type: optional<string>
              ending_before:
                docs: >-
                  A cursor for use in pagination, `ending_before` takes in an
                  item key and the subsequent call will return the prior items
                  in the list. This is mutually exclusive with `starting_after`.
                type: optional<string>
          response: _InlinedType12

types:
  _InlinedType7:
    docs: Standard fields that are present on all database objects.
    properties:
      created_at:
        docs: Immutable Unix timestamp in milliseconds taken at time of creation
        type: optional<integer>
      key:
        docs: A unique identifier used to reference the object
        type: optional<string>
      updated_at:
        docs: Unix timestamp in milliseconds taken at time of last update
        type: optional<integer>

  _InlinedType8:
    docs: "**Customers** represent the users who have been referred by a **Partner**."
    properties:
      archived:
        docs: The boolean flag which determines if the customer is archived or not
        type: optional<boolean>
      company:
        docs: Base schema representation of a company
        type: optional<_InlinedType9>
      country_iso:
        docs: The abbreviated name of the customer's country of origin
        type: optional<string>
      customer_key:
        docs: The key provided by the company to identify the customer
        type: optional<string>
      has_paid:
        docs: The boolean flag which determines if the customer has paid or not
        type: optional<boolean>
      key:
        docs: Unique key of this customer
        type: optional<string>
      partnership_key:
        docs: Unique key of this partnership
        type: optional<string>
      sub_ids: optional<list<string>>

  _InlinedType10:
    extends:
      - _InlinedType7
      - _InlinedType8

  _InlinedType11:
    properties:
      has_more: optional<boolean>
      items: optional<list<_InlinedType10>>
      total: optional<integer>

  _InlinedType12:
    properties:
      data: _InlinedType11
      message: string
      status: integer
