components:
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    email: support@partnerstack.com
    name: PartnerStack Support
  description: PartnerStack Partner REST API.
  termsOfService: https://docs.google.com/document/d/1o7pDmMsvetHTx2gwSSg2WBwbM2yZcvf-63-YIA_Qz2I/export?format=pdf
  title: PartnerStack Partner API
  version: 2.0.0
  x-logo:
    altText: PartnerStack Logo
    url: https://assets.website-files.com/5bd09c4c2b661f4530a081c3/5bd86b2716e1ea314e5c2c05_rectangle%20-%20icon%20%2B%20text%20-%20purple.png
openapi: 3.0.2
paths:
  /v2/actions:
    get:
      description: Returns a list of your actions. The actions are returned sorted by creation date by default, with the most recent actions appearing first.
      parameters:
        - description: Applies a minimum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538062487765
          in: query
          name: min_created
          schema:
            format: int32
            type: integer
        - description: Applies a maximum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538352000000
          in: query
          name: max_created
          schema:
            format: int32
            type: integer
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - description: An **Action** represents a specific action a partner or customer took on your platform
                              properties:
                                archived:
                                  description: The boolean flag which determines if the action is archived or not.
                                  example: 'True'
                                  type: boolean
                                company:
                                  description: Base schema representation of a company
                                  properties:
                                    key:
                                      description: Unique key of this company
                                      example: co_UD9407hi0jFiFe
                                      type: string
                                    name:
                                      description: The name of this company
                                      example: Nice Company
                                      type: string
                                  type: object
                                customer:
                                  nullable: true
                                  properties:
                                    key:
                                      description: Unique key of this customer.
                                      example: cus_1h1QBVUg03Ij69
                                      nullable: true
                                      type: string
                                    sub_ids:
                                      example:
                                        - youtube
                                      items:
                                        type: string
                                      nullable: true
                                      type: array
                                  type: object
                                partnership_key:
                                  description: Unique key of this partnership.
                                  example: part_1234567
                                  type: string
                                type:
                                  description: The type of action the partner or customer performed
                                  example: post_created
                                  type: string
                                  x-accessor: external_type
                                value:
                                  description: The number of times the action was performed
                                  example: 1
                                  minimum: 1
                                  type: integer
                              type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: Returns a list of your actions. The actions are returned sorted by creation date by default, with the most recent actions appearing first.
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all actions
      tags:
        - Actions
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
  /v2/customers:
    get:
      description: Returns a list of your customers. The customers are returned sorted by creation date by default, with the most recent customers appearing first.
      parameters:
        - description: Applies a minimum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538062487765
          in: query
          name: min_created
          schema:
            format: int32
            type: integer
        - description: Applies a maximum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538352000000
          in: query
          name: max_created
          schema:
            format: int32
            type: integer
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - description: '**Customers** represent the users who have been referred by a **Partner**.'
                              properties:
                                archived:
                                  description: The boolean flag which determines if the customer is archived or not
                                  example: 'True'
                                  type: boolean
                                company:
                                  description: Base schema representation of a company
                                  properties:
                                    key:
                                      description: Unique key of this company
                                      example: co_UD9407hi0jFiFe
                                      type: string
                                    name:
                                      description: The name of this company
                                      example: Nice Company
                                      type: string
                                  type: object
                                country_iso:
                                  description: The abbreviated name of the customer's country of origin
                                  example: CA
                                  nullable: true
                                  type: string
                                customer_key:
                                  description: The key provided by the company to identify the customer
                                  example: c7773gg-3355-53cf-3f3g-fefe4445
                                  nullable: true
                                  type: string
                                  x-accessor: external_key
                                has_paid:
                                  description: The boolean flag which determines if the customer has paid or not
                                  example: 'True'
                                  type: boolean
                                key:
                                  description: Unique key of this customer
                                  example: cus_1h1QBVUg03Ij69
                                  type: string
                                partnership_key:
                                  description: Unique key of this partnership
                                  example: part_1234567
                                  type: string
                                sub_ids:
                                  example:
                                    - youtube
                                  items:
                                    type: string
                                  type: array
                              type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: Returns a list of your customers. The customers are returned sorted by creation date by default, with the most recent customers appearing first.
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all customers
      tags:
        - Customers
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
  /v2/partnerships:
    get:
      description: Returns a list of your partnerships. The partnerships are returned sorted by creation date by default, with the most recent partnerships appearing first.
      parameters:
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
              - '-updated_at'
              - updated_at
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - description: Partnerships represent companies that you are partnered with and promoting on PartnerStack
                              properties:
                                company:
                                  description: Base schema representation of a company
                                  properties:
                                    key:
                                      description: Unique key of this company
                                      example: co_UD9407hi0jFiFe
                                      type: string
                                    name:
                                      description: The name of this company
                                      example: Nice Company
                                      type: string
                                  type: object
                                status:
                                  description: 'Your status in this companies program. Can be one of: `active`, `application-denied`, `application-pending`, `program-waitlisted`, `removed`.'
                                  enum:
                                    - active
                                    - application-denied
                                    - application-pending
                                    - program-waitlisted
                                    - removed
                                  example: active
                                  type: string
                              type: object
                            - properties:
                                link:
                                  description: Base schema representation of a link
                                  properties:
                                    destination:
                                      description: The destination that this link redirects to
                                      example: https://partnerstack.com
                                      type: string
                                    key:
                                      description: Unique key of this link
                                      example: link_787j5aOLRR76yi
                                      type: string
                                    url:
                                      description: 'The url that is shared for this link '
                                      example: https://companyname.grsm.io/slug
                                      type: string
                                  type: object
                              type: object
                            - properties:
                                team:
                                  properties:
                                    key:
                                      nullable: true
                                      type: string
                                    name:
                                      nullable: true
                                      type: string
                                  type: object
                              type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: Returns a list of your partnerships. The partnerships are returned sorted by creation date by default, with the most recent partnerships appearing first.
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all partnerships
      tags:
        - Partnerships
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
  /v2/payouts:
    get:
      description: Returns a list of your payouts. The payouts are returned sorted by creation date by default, with the most recent payout appearing first.
      parameters:
        - description: Applies a minimum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538062487765
          in: query
          name: min_created
          schema:
            format: int32
            type: integer
        - description: Applies a maximum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538352000000
          in: query
          name: max_created
          schema:
            format: int32
            type: integer
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - description: Payouts represent the rewards that are payable to the partner.
                              properties:
                                amount:
                                  description: The amount of this payout in terms of total cents.
                                  example: 1000
                                  nullable: false
                                  type: integer
                                currency:
                                  description: The currency used for this payout.
                                  example: USD
                                  type: string
                                key:
                                  description: Unique key of this payout.
                                  example: pay_D6ZzF1hNc3wxVk
                                  nullable: false
                                  type: string
                                provider:
                                  description: The details of the payment provider.
                                  properties:
                                    external_key:
                                      description: The external unique key given by the payment provider.
                                      example: acct_1Hr46HA3xGvX8bUH
                                      type: string
                                    key:
                                      description: Unique key of the payment provider.
                                      example: ppa_U3VO03jxl14dsg
                                      nullable: false
                                      type: string
                                    name:
                                      description: The name of the payment provider.
                                      enum:
                                        - stripe
                                        - paypal
                                        - airwallex
                                        - manual
                                      example: stripe
                                      type: string
                                  type: object
                                sent_at:
                                  description: The date the payout was requested to be withdrawn in epoch time (ms).
                                  example: '1627328857536'
                                  type: integer
                                status:
                                  description: The status of this payout.
                                  enum:
                                    - new
                                    - ready
                                    - pending
                                    - successful
                                    - failed
                                    - cancelled
                                  example: new
                                  type: string
                                withdrawal_date:
                                  description: The date the payout was withdrawn successfully in epoch time (ms).
                                  example: '1627328857536'
                                  nullable: true
                                  type: integer
                              type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: Returns a list of your payouts. The payouts are returned sorted by creation date by default, with the most recent payout appearing first.
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all payouts
      tags:
        - Payouts
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
  /v2/rewards:
    get:
      description: Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first.
      parameters:
        - description: Company key in which the results are filtered by.
          example: co_1234
          in: query
          name: company_key
          schema:
            type: string
        - description: The payment status of the rewards
          example: available
          in: query
          name: payment_status
          required: false
          schema:
            enum:
              - in_transit
              - withdrawn
              - available
              - paid_externally
            type: string
        - description: Applies a maximum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538352000000
          in: query
          name: max_created
          schema:
            format: int32
            type: integer
        - description: Applies a minimum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538062487765
          in: query
          name: min_created
          schema:
            format: int32
            type: integer
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
              - '-amount'
              - amount
              - '-ready_at'
              - ready_at
            type: string
        - description: Group key in which the results are filtered by
          example: grup_123
          in: query
          name: group_key
          schema:
            type: string
        - description: Customer key in which the results are filtered by
          example: cus_123
          in: query
          name: customer_key
          schema:
            type: string
        - description: Invoice key in which the results are filtered by
          example: invo_123
          in: query
          name: invoice_key
          required: false
          schema:
            type: string
        - description: The status of the rewards
          example: pending
          in: query
          name: status
          required: false
          schema:
            enum:
              - pending
              - declined
              - approved
              - hold
              - paid
              - scheduled
            type: string
        - description: Flag if drip rewards should be included into the results
          example: 'false'
          in: query
          name: exclude_drip_rewards
          required: false
          schema:
            type: string
        - description: Flag to hide rewards that have been archived
          example: 'false'
          in: query
          name: hide_archived_rewards
          required: false
          schema:
            type: boolean
        - description: Flag if drip rewards returned have a line_id (invoice) attached or not
          example: 'false'
          in: query
          name: empty_line_id
          required: false
          schema:
            type: boolean
        - description: Free keywords that will filter on the followingReward key, Customer name, Partner first name, Partner last name, Partner email, Partner key
          example: rwrd_1234
          in: query
          name: keywords
          required: false
          schema:
            type: string
        - description: Text that the description must contain
          example: $5 for every sign up
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Flag the returned results should have distinct descriptions or not
          example: 'true'
          in: query
          name: distinct_description
          required: false
          schema:
            type: boolean
        - description: Flag the returned results should have distinct decline reasons or not
          example: 'true'
          in: query
          name: distinct_decline_reason
          required: false
          schema:
            type: boolean
        - description: Text that the decline_reason must contain
          example: 'Automated: On hold due to suspicious activity'
          in: query
          name: decline_reason
          required: false
          schema:
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - allOf:
                                - description: Reward is what you earn from companies on PartnerStack.
                                  properties:
                                    amount:
                                      description: The amount of the reward in cents (USD).
                                      example: 1000
                                      maximum: 100000000
                                      nullable: true
                                      type: integer
                                    decline_reason:
                                      description: The reason the reward has been held or declined
                                      example: Invalid reward
                                      nullable: true
                                      type: string
                                    description:
                                      description: The description that the company gives to the reward.
                                      example: $30 earned for every transaction made by each customer
                                      nullable: true
                                      type: string
                                    reward_status:
                                      description: 'The status of the reward. Can be one of: `hold`, `pending`, `approved`, `declined`, `paid`.'
                                      example: pending
                                      nullable: true
                                      type: string
                                  type: object
                                - description: Reward is what you earn from companies on PartnerStack.
                                  properties:
                                    company:
                                      properties:
                                        key:
                                          description: Unique key of this company.
                                          example: comp_1234567
                                          type: string
                                        name:
                                          description: The name of this company.
                                          example: Company
                                          type: string
                                      type: object
                                    customer:
                                      nullable: true
                                      properties:
                                        key:
                                          description: Unique key of this customer.
                                          example: cus_1h1QBVUg03Ij69
                                          nullable: true
                                          type: string
                                        sub_ids:
                                          example:
                                            - youtube
                                          items:
                                            type: string
                                          nullable: true
                                          type: array
                                      type: object
                                    partnership_key:
                                      description: Unique key of this partnership.
                                      example: part_1234567
                                      nullable: true
                                      type: string
                                    payment_date:
                                      description: The epoch timestamp (ms) for when the partner should be able to cash out the reward. Can be null when the reward is declined.
                                      example: 1592944078600
                                      nullable: true
                                      type: integer
                                    payment_status:
                                      description: 'This status indicates whether the partner can withdraw the reward. Can be one of: `pending`, `available`, `withdrawn`, or `paid_externally`. Can be null when the payment is declined.'
                                      example: pending
                                      nullable: true
                                      type: string
                                    source:
                                      nullable: true
                                      properties:
                                        key:
                                          description: The key of the source that generated this reward.
                                          example: tran_b0qwaE3cCldjci
                                          nullable: false
                                          type: string
                                        type:
                                          description: 'The source that generated this reward. Can be one of: `transaction`, `lead`, `deal`, `submission`, `action`, `bill`, `asset`, `order_item`, `request`, `bonus`.'
                                          example: transaction
                                          nullable: true
                                          type: string
                                      type: object
                                  type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: Returns a list of your rewards. The rewards are returned sorted by creation date by default, with the most recent rewards appearing first.
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all rewards
      tags:
        - Rewards
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
  /v2/transactions:
    get:
      description: 'Returns a list of your transactions. The transactions are returned sorted by creation date, with the most recent transactions appearing first. '
      parameters:
        - description: Applies a minimum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538062487765
          in: query
          name: min_created
          schema:
            format: int32
            type: integer
        - description: Applies a maximum epoch timestamp (ms) filter to the response `created_at`.
          example: 1538352000000
          in: query
          name: max_created
          schema:
            format: int32
            type: integer
        - description: The field in which the results are ordered by. A `-` prefix denotes that the results are in descending order.
          example: '-created_at'
          in: query
          name: order_by
          required: false
          schema:
            enum:
              - '-created_at'
              - created_at
            type: string
        - description: A limit on the number of items to be returned. Limits can range between 1 and 250, and the default is 10.
          example: 10
          in: query
          name: limit
          schema:
            default: 10
            maximum: 250
            minimum: 1
            type: integer
        - description: A cursor for use in pagination, `starting_after` takes in an item key and the subsequent call will return the following items in the list. This is mutually exclusive with `ending_before`.
          example: key_8U5s1iH2Pd2a2p
          in: query
          name: starting_after
          schema:
            type: string
        - description: A cursor for use in pagination, `ending_before` takes in an item key and the subsequent call will return the prior items in the list. This is mutually exclusive with `starting_after`.
          example: key_sE1vd9uwep7XHg
          in: query
          name: ending_before
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      has_more:
                        type: boolean
                      items:
                        items:
                          allOf:
                            - description: Standard fields that are present on all database objects.
                              properties:
                                created_at:
                                  description: Immutable Unix timestamp in milliseconds taken at time of creation
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                                key:
                                  description: A unique identifier used to reference the object
                                  example: co_a80cb515fe
                                  maxLength: 255
                                  type: string
                                updated_at:
                                  description: Unix timestamp in milliseconds taken at time of last update
                                  example: 1574181282399
                                  format: int32
                                  type: integer
                              type: object
                            - description: Transactions
                              properties:
                                amount:
                                  description: Transaction amount in cents for specified currency.
                                  example: 10000
                                  type: integer
                                amount_usd:
                                  description: Transaction amount in cents converted to USD.
                                  example: 10000
                                  type: integer
                                archived:
                                  description: The boolean flag which determines if the transaction is archived or not
                                  example: 'True'
                                  type: boolean
                                category_key:
                                  description: Key of transaction category.
                                  maxLength: 255
                                  minLength: 1
                                  nullable: true
                                  type: string
                                company:
                                  description: Base schema representation of a company
                                  properties:
                                    key:
                                      description: Unique key of this company
                                      example: co_UD9407hi0jFiFe
                                      type: string
                                    name:
                                      description: The name of this company
                                      example: Nice Company
                                      type: string
                                  type: object
                                currency:
                                  description: Transaction currency type.
                                  example: USD
                                  maxLength: 3
                                  minLength: 3
                                  type: string
                                customer:
                                  nullable: true
                                  properties:
                                    key:
                                      description: Unique key of this customer.
                                      example: cus_1h1QBVUg03Ij69
                                      nullable: true
                                      type: string
                                    sub_ids:
                                      example:
                                        - youtube
                                      items:
                                        type: string
                                      nullable: true
                                      type: array
                                  type: object
                                partnership_key:
                                  description: Unique key of this partnership.
                                  example: part_1234567
                                  type: string
                                product_key:
                                  description: Key of transaction product.
                                  maxLength: 255
                                  minLength: 1
                                  nullable: true
                                  type: string
                              type: object
                        type: array
                      total:
                        nullable: true
                        type: integer
                    type: object
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                  - data
                type: object
          description: 'Returns a list of your transactions. The transactions are returned sorted by creation date, with the most recent transactions appearing first. '
        '400':
          content:
            application/json:
              example:
                message: Bad Request, illegal input for operation
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Bad Request Error
        '401':
          content:
            application/json:
              example:
                message: Unauthorized, you credentials were invalid
                status: 401
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Unauthorized Error
        '403':
          content:
            application/json:
              example:
                message: You don't have permissions to do that
                status: 403
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Forbidden Error
        '404':
          content:
            application/json:
              example:
                message: Not Found, could not find the requested resource
                status: 404
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Not Found Error
        '500':
          content:
            application/json:
              example:
                message: Internal Server Error, something went wrong
                status: 500
              schema:
                properties:
                  message:
                    type: string
                  status:
                    format: int32
                    type: integer
                required:
                  - status
                  - message
                type: object
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all transactions
      tags:
        - Transactions
      x-apiType:
        - partner
      x-isPublic: true
      x-scope: read
security:
  - bearerAuth: []
servers:
  - url: '{protocol}://{subdomain}.{domain}/{basePath}'
    variables:
      basePath:
        default: api
        enum:
          - api
      domain:
        default: partnerstack.com
        enum:
          - partnerstack.com
      protocol:
        default: https
        enum:
          - https
      subdomain:
        default: api
        enum:
          - api
tags: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
