# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  
service:
  auth: true
  base-path: /
  endpoints:
    assignPartnership:
      path: /deals/{deal_key}/assignment/{partnership_key}/{stack_key}
      method: POST
      docs: Assign the provided partnership to the provided deal.
      display-name: Assign partnership to deal
      path-parameters:
        deal_key:
          docs: Unique identifier of the deal
          type: string
        partnership_key:
          docs: Unique identifier of the partnership
          type: string
        stack_key:
          docs: Personal stack key
          type: string
      response: AssignPartnershipResponse

    getDealFile:
      path: /deals/{deal_key}/file/{file_key}
      method: GET
      docs: Get the file for the deal.
      display-name: Get deal file
      path-parameters:
        deal_key:
          docs: Unique identifier of the deal
          type: string
        file_key:
          docs: Unique identifier of the file
          type: string
      response: DealFileResponse

    listAllDeals:
      path: /v2/deals
      method: GET
      docs: |-
        Returns a list of your deals. The deals are
            returned sorted by creation date, with the most recent deals
            appearing first.
      display-name: List all deals
      request:
        name: ListAllDealsRequest
        query-parameters:
          min_created:
            docs: >-
              Applies a minimum epoch timestamp (ms) filter to the response
              `created_at`.
            type: optional<integer>
          max_created:
            docs: >-
              Applies a maximum epoch timestamp (ms) filter to the response
              `created_at`.
            type: optional<integer>
          min_updated:
            docs: >-
              Applies a minimum epoch timestamp (ms) filter to the response
              `updated_at`.
            type: optional<integer>
          max_updated:
            docs: >-
              Applies a maximum epoch timestamp (ms) filter to the response
              `updated_at`.
            type: optional<integer>
          group:
            docs: >-
              Will filter for partnerships who are in a group with the specified name.
              Name must have spaces and special characters removed.
            type: optional<string>
          partner_key:
            docs: >-
              Will filter to a specific partnership's `partner_key`, which can be found
              using the partnership's get endpoint or from the partnership view
              in your PartnerStack dashboard.
            type: optional<string>
          limit:
            docs: >-
              A limit on the number of items to be returned. Limits can range between 1
              and 250, and the default is 10.
            type: optional<integer>
          starting_after:
            docs: >-
              A cursor for use in pagination, `starting_after` takes in an item key and
              the subsequent call will return the following items in the list.
              This is mutually exclusive with `ending_before`.
            type: optional<string>
          ending_before:
            docs: >-
              A cursor for use in pagination, `ending_before` takes in an item key and
              the subsequent call will return the prior items in the list. This
              is mutually exclusive with `starting_after`.
            type: optional<string>
      response: ListAllDealsResponse

    create:
      path: /v2/deals
      method: POST
      docs: Creates a deal with desired params.
      display-name: Create a deal
      request:
        name: CreateDealRequest
        body: CreateDealRequestBody
      response: DealResponse

    getFormTemplate:
      path: /v2/deals/form-templates
      method: GET
      docs: Fetches the specified form templates for a deal.
      display-name: Retrieve the form templates for a deal
      request:
        name: GetFormTemplateRequest
        query-parameters:
          group_key: optional<string>
          mold_key: optional<string>
          partner_key: optional<string>
      response: FormTemplateResponse

    get:
      path: /v2/deals/{deal_key}
      method: GET
      docs: >-
        Retrieves the details of an existing deal. You need only supply the unique
        deal key that was returned upon deal creation.
      display-name: Retrieve a deal
      path-parameters:
        deal_key:
          docs: >-
            Unique identifier of deal. Can be `external_key`, if one configured for
            deal.
          type: string
      response: DealResponse

    delete:
      path: /v2/deals/{deal_key}
      method: DELETE
      docs: Archives the specified deal
      display-name: Archive a deal
      path-parameters:
        deal_key:
          docs: Unique identifier of deal.
          type: string
      response: commons.BaseResponse

    update:
      path: /v2/deals/{deal_key}
      method: PATCH
      docs: |-
        Updates the specified deal by setting the values of
            the parameters passed. Any parameters not provided will be left
            unchanged.
      display-name: Update a deal
      path-parameters:
        deal_key:
          docs: >-
            Unique identifier of deal. Can be `external_key`, if one configured for
            deal.
          type: string
      request:
        name: UpdateDealRequest
        body:
          properties:
            account_name:
              docs: Name of the account
              type: optional<string>
            amount:
              docs: Deal amount in **cents**
              type: optional<integer>
            close_date:
              docs: Expected close date of deal as YYYY-MM-DD
              type: optional<string>
            contact_first_name:
              docs: First name of the account's contact
              type: optional<string>
            contact_last_name:
              docs: Last name of the account's contact
              type: optional<string>
            external_key:
              docs: Reference that can be used in place of the key.
              type: optional<string>
            fields: optional<list<commons.FieldData>>
            group_key:
              docs: >-
                The unique key of the group in which this deals's partner is in
              type: optional<string>
            lost_reason:
              docs: Reason for which the deal was lost.
              type: optional<string>
            mold_key: optional<string>
            partner_key:
              docs: The unique key of the partner who owns this deal
              type: optional<string>
            source:
              docs: >-
                Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if
                not specified
              type: optional<DealSource>
            stage:
              docs: >-
                Current stage of this deal. Must appear in Deals Stage list found in group
                settings.
              type: optional<string>
            team: optional<Team>
            team_member: optional<TeamMember>
      response: DealResponse

    convertDealToCustomer:
      path: /v2/deals/{deal_key}/convert
      method: POST
      docs: Converts a deal to a customer
      display-name: Convert a deal
      path-parameters:
        deal_key:
          docs: Unique identifier of deal.
          type: string
      request:
        name: ConvertDealToCustomerRequest
        body:
          properties:
            customer_key:
              docs: >-
                Unique identifier to be used for customer. If no value is passed email of
                deal being converted will be used as `customer_key`.
              type: optional<string>
            email:
              docs: The customers email, must be a valid email.
              type: string
      response: unknown #customers.CustomerResponse

    getDealFiles:
      path: /v2/deals/{deal_key}/files
      method: GET
      docs: Gets the files attached to the specified deal
      display-name: Get files attached to a deal
      path-parameters:
        deal_key:
          docs: Unique identifier of the deal
          type: string
      response: DealFilesResponse

types:
  CustomerResponseData:
    extends:
      - commons.BaseObject
      - CustomerObject

  CustomerResponse:
    extends: commons.BaseResponse
    properties:
      data: CustomerResponseData

  CustomerObject:
    properties:
      customer_key:
        docs: External customer key that can be configured on creation.
        type: optional<string>
      email:
        docs: The customers email, must be a valid email
        type: optional<string>
      name:
        docs: Should be either the customer's name, or the company name
        type: optional<string>
      provider_key:
        docs: >-
          A unique identifier given by a payment provider (Stripe, Recurly,
          Chargebee etc)
        type: optional<string>

  DealFileData:
    properties:
      url:
        docs: URL for the file
        type: optional<string>

  DealFileResponse:
    extends: commons.BaseResponse
    properties:
      data: DealFileData

  DealObject:
    docs: >-
      **Deals** allow your partners to submit accounts they are working to your
      sales team to avoid channel conflicts and earn commissions for closed
      accounts. Typically the Deals experience is handled through a CRM
      integration like Salesforce. However you may opt to use the Deals API to
      have PartnerStack interact with a custom data warehouse rather than
      directly with your CRM.
    properties:
      account_name:
        docs: Name of the account
        type: optional<string>
      amount:
        docs: Deal amount in **cents**
        type: optional<integer>
      close_date:
        docs: Expected close date of deal as YYYY-MM-DD
        type: optional<string>
      contact_first_name:
        docs: First name of the account's contact
        type: optional<string>
      contact_last_name:
        docs: Last name of the account's contact
        type: optional<string>
      external_key:
        docs: Reference that can be used in place of the key.
        type: optional<string>
      fields: optional<list<commons.FieldData>>
      group_key:
        docs: The unique key of the group in which this deals's partner is in
        type: optional<string>
      lost_reason:
        docs: Reason for which the deal was lost.
        type: optional<string>
      mold_key: optional<string>
      partner_key:
        docs: The unique key of the partner who owns this deal
        type: optional<string>
      source:
        docs: >-
          Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if
          not specified
        type: optional<DealSource>
      stage:
        docs: >-
          Current stage of this deal. Must appear in Deals Stage list found in group
          settings.
        type: optional<string>
      team:
        docs: Standard fields that are present on all database objects.
        type: optional<Team>
      team_member: optional<TeamMember>

  Team:
    extends: commons.BaseObject
    properties:
      name:
        type: optional<string>
        docs: The name of the partner team

  Deal:
    extends:
      - commons.BaseObject
      - DealObject

  ListAllDealsData:
    properties:
      has_more: optional<boolean>
      items: optional<list<Deal>>

  ListAllDealsResponse:
    extends: commons.BaseResponse
    properties:
      data: ListAllDealsData

  DealResponseData:
    extends:
      - commons.BaseObject
      - DealObject

  DealResponse:
    extends: commons.BaseResponse
    properties:
      data: DealResponseData

  FormTemplate:
    docs: >-
      **FormTemplates** are configurable on many of our supported objects. These
      forms act as a way to collect additional information on object create
    properties:
      description:
        docs: A description for users to better understand the form
        type: optional<string>
      fields: optional<list<commons.FieldData>>
      groups: optional<list<Group>>
      name:
        docs: The presented name of this form
        type: optional<string>
      title:
        docs: A title to display to users when they fill out the form
        type: optional<string>
      type:
        docs: The type of object within PartnerStack that this form translates to
        type: optional<string>

  FormTemplateData:
    extends:
      - commons.BaseObject
      - FormTemplate

  FormTemplateResponse:
    extends: commons.BaseResponse
    properties:
      data: list<FormTemplateData>

  _InlinedType61:
    docs: >-
      **Deals** allow your partners to submit accounts they are working to your
      sales team to avoid channel conflicts and earn commissions for closed
      accounts. Typically the Deals experience is handled through a CRM
      integration like Salesforce. However you may opt to use the Deals API to
      have PartnerStack interact with a custom data warehouse rather than
      directly with your CRM.
    properties:
      account_name:
        docs: Name of the account
        type: optional<string>
      amount:
        docs: Deal amount in **cents**
        type: optional<integer>
      close_date:
        docs: Expected close date of deal as YYYY-MM-DD
        type: optional<string>
      contact_first_name:
        docs: First name of the account's contact
        type: optional<string>
      contact_last_name:
        docs: Last name of the account's contact
        type: optional<string>
      external_key:
        docs: Reference that can be used in place of the key.
        type: optional<string>
      fields: optional<list<commons.FieldData>>
      group_key:
        docs: The unique key of the group in which this deals's partner is in
        type: optional<string>
      lost_reason:
        docs: Reason for which the deal was lost.
        type: optional<string>
      mold_key: optional<string>
      partner_key:
        docs: The unique key of the partner who owns this deal
        type: optional<string>
      source:
        docs: >-
          Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if
          not specified
        type: optional<DealSource>
      stage:
        docs: >-
          Current stage of this deal. Must appear in Deals Stage list found in group
          settings.
        type: optional<string>
      team: optional<Team>
      team_member: optional<TeamMember>

  DealDetailsData:
    extends:
      - commons.BaseObject
      - DealDetails

  DealDetails:
    extends: commons.BaseResponse
    properties:
      data: DealDetailsData

  DealFile:
    properties:
      field_key: optional<string>
      key: optional<string>
      name: optional<string>

  DealFilesData:
    properties:
      deal_files: optional<list<DealFile>>

  DealFilesResponse:
    extends: commons.BaseResponse
    properties:
      data: DealFilesData

  AssignPartnershipResponse:
    extends: commons.BaseResponse

  DealSource:
    docs: Source of the deal, defaults to 'partner' if not specified
    enum:
      - partner
      - vendor

  TeamMember:
    extends: commons.BaseObject
    properties:
      email:
        docs: Email of the partner team member
        type: optional<string>
      first_name:
        docs: First name of the partner team member
        type: optional<string>
      last_name:
        docs: Last name of the partner team member
        type: optional<string>

  CreateDealRequestBody:
    union:
      group_key: GroupKey
      partner_key: PartnerKey

  BaseKey:
    properties:
      account_name:
        docs: Name of the account
        type: optional<string>
      amount:
        docs: Deal amount in **cents**
        type: optional<integer>
      close_date:
        docs: Expected close date of deal as YYYY-MM-DD
        type: optional<string>
      contact_first_name:
        docs: First name of the account's contact
        type: optional<string>
      contact_last_name:
        docs: Last name of the account's contact
        type: optional<string>
      external_key:
        docs: Reference that can be used in place of the key.
        type: optional<string>
      fields: optional<list<commons.FieldData>>
      lost_reason:
        docs: Reason for which the deal was lost.
        type: optional<string>
      mold_key: optional<string>
      source:
        docs: >-
          Source of the deal, either 'partner' or 'vendor', defaults to 'partner' if
          not specified
        type: optional<DealSource>
      stage:
        docs: >-
          Current stage of this deal. Must appear in Deals Stage list found in group
          settings.
        type: optional<string>

  GroupKey:
    extends: BaseKey
    properties:
      group_key:
        type: string
        docs: The unique key of the group in which this deals's prospective partner is.
          Required if 'source' is specified as 'vendor'

  PartnerKey:
    extends: BaseKey
    properties:
      partner_key:
        type: string
        docs: The unique key of the partner who owns this deal. Required if 'source' is
          specified as 'partner'.
  Group:
    docs: >-
      **Groups** are a way to segment partners within PartnerStack to
      selectively distribute access to things such as Campaigns, Marketing
      Assets, and Rewards
    properties:
      archived:
        docs: Whether or not this group is still active
        type: optional<boolean>
      default:
        docs: Whether this is the default Group for partners to join
        type: optional<boolean>
      name:
        docs: The name of this Group as presented to partners
        type: optional<string>
      slug:
        docs: The slugified version of this groups name to be added to routes
        type: optional<string>