# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    ActionsService:
      auth: true
      base-path: /v2/actions
      endpoints:
        listAllActions:
          path: ""
          method: GET
          docs: >-
            Returns a list of your actions. The actions are returned sorted by
            creation date by default, with the most recent actions appearing
            first.
          display-name: List all actions
          request:
            query-parameters:
              min_created:
                docs: >-
                  Applies a minimum epoch timestamp (ms) filter to the response
                  `created_at`.
                type: optional<integer>
              max_created:
                docs: >-
                  Applies a maximum epoch timestamp (ms) filter to the response
                  `created_at`.
                type: optional<integer>
              min_updated:
                docs: >-
                  Applies a minimum epoch timestamp (ms) filter to the response
                  `updated_at`.
                type: optional<integer>
              max_updated:
                docs: >-
                  Applies a maximum epoch timestamp (ms) filter to the response
                  `updated_at`.
                type: optional<integer>
              partnership_key:
                docs: Partnership key in which the results are filtered by.
                type: optional<string>
              action_type:
                docs: Will filter for actions with the specified name.
                type: optional<string>
              order_by:
                docs: >-
                  The field in which the results are ordered by. A `-` prefix
                  denotes that the results are in descending order.
                type: optional<string>
              limit:
                docs: >-
                  A limit on the number of items to be returned. Limits can
                  range between 1 and 250, and the default is 10.
                type: optional<integer>
              starting_after:
                docs: >-
                  A cursor for use in pagination, `starting_after` takes in an
                  item key and the subsequent call will return the following
                  items in the list. This is mutually exclusive with
                  `ending_before`.
                type: optional<string>
              ending_before:
                docs: >-
                  A cursor for use in pagination, `ending_before` takes in an
                  item key and the subsequent call will return the prior items
                  in the list. This is mutually exclusive with `starting_after`.
                type: optional<string>
          response: _InlinedType88

        _unnamedOperation9:
          path: ""
          method: POST
          docs: >-
            Records a new action taken by a given partner or customer, and the
            number of times that action was performed.
          display-name: Record action
          request:
            body:
              extends:
                - _InlinedType89
          response: _InlinedType96

        _unnamedOperation10:
          path: /{action_key}
          method: DELETE
          docs: >-
            Archives an action. Any associated rewards or drip rewards will be
            archived as well.
          display-name: Archive an action
          path-parameters:
            action_key:
              docs: Unique identifier for actions
              type: string
          response: _InlinedType97

types:
  _InlinedType82:
    docs: Standard fields that are present on all database objects.
    properties:
      created_at:
        docs: Immutable Unix timestamp in milliseconds taken at time of creation
        type: optional<integer>
      key:
        docs: A unique identifier used to reference the object
        type: optional<string>
      updated_at:
        docs: Unix timestamp in milliseconds taken at time of last update
        type: optional<integer>

  _InlinedType83:
    docs: >-
      An **Action** represents a specific action a partner or customer took on
      your platform
    properties:
      archived:
        docs: The boolean flag which determines if the action is archived or not.
        type: optional<boolean>
      company:
        docs: Base schema representation of a company
        type: optional<_InlinedType84>
      customer: optional<_InlinedType85>
      partnership_key:
        docs: Unique key of this partnership.
        type: optional<string>
      type:
        docs: The type of action the partner or customer performed
        type: optional<string>
      value:
        docs: The number of times the action was performed
        type: optional<integer>

  _InlinedType86:
    extends:
      - _InlinedType82
      - _InlinedType83

  _InlinedType87:
    properties:
      has_more: optional<boolean>
      items: optional<list<_InlinedType86>>
      total: optional<integer>

  _InlinedType88:
    properties:
      data: _InlinedType87
      message: string
      status: integer

  _InlinedType89:
    docs: >-
      **Actions** represent a specific action a partner or customer took on your
      platform
    properties:
      external_key:
        docs: The external key of the action record in PartnerStack
        type: optional<string>
      target_key:
        docs: >-
          The identifier of the target specified in `target_type`. For a
          customer, this is the customer key. For a partnership, it is their
          partner key.
        type: optional<string>
      target_type:
        docs: Whether to record an action under a partnership or customer
        type: optional<_InlinedType90>
      type:
        docs: The type of action the partner or customer performed
        type: optional<string>
      value:
        docs: The number of times the action was performed
        type: optional<integer>

  _InlinedType92:
    docs: Standard fields that are present on all database objects.
    properties:
      created_at:
        docs: Immutable Unix timestamp in milliseconds taken at time of creation
        type: optional<integer>
      key:
        docs: A unique identifier used to reference the object
        type: optional<string>
      updated_at:
        docs: Unix timestamp in milliseconds taken at time of last update
        type: optional<integer>

  _InlinedType93:
    docs: >-
      **Actions** represent a specific action a partner or customer took on your
      platform
    properties:
      external_key:
        docs: The external key of the action record in PartnerStack
        type: optional<string>
      target_key:
        docs: >-
          The identifier of the target specified in `target_type`. For a
          customer, this is the customer key. For a partnership, it is their
          partner key.
        type: optional<string>
      target_type:
        docs: Whether to record an action under a partnership or customer
        type: optional<_InlinedType94>
      type:
        docs: The type of action the partner or customer performed
        type: optional<string>
      value:
        docs: The number of times the action was performed
        type: optional<integer>

  _InlinedType95:
    extends:
      - _InlinedType92
      - _InlinedType93

  _InlinedType96:
    properties:
      data: _InlinedType95
      message: string
      status: integer

  _InlinedType97:
    properties:
      message: string
      status: integer
